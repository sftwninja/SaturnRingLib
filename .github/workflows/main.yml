---
name: Generate Test Report
# This workflow is triggered automatically and generates a test report
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  MEDNAFEN_HOME: ${{ github.workspace }}/emulators/mednafen/.mednafen
  SDL_VIDEODRIVER: dummy

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: willll/saturn-docker:gcc_14.2.0_vanilla

    steps:
      - name: Setup environment
        run: |
          apt-get update
          apt-get upgrade -y
          apt-get install -y unzip libsdl2-2.0-0 libflac-dev
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup iso2raw tool
        run: |
          cd $GITHUB_WORKSPACE
          ./tools/scripts/getiso2raw.sh v0.2.2
      - name: Build
        run: |
          cd $GITHUB_WORKSPACE/Tests
          make all
          # zip -r BuildDrop.zip BuildDrop/
      - name: Upload executable
        if: ${{ false }}
        uses: actions/upload-artifact@v4
        with:
          name: BuildDrop.zip
          path: Tests/BuildDrop.zip
      - name: Install Mednafen
        run: |
          cd $GITHUB_WORKSPACE/emulators/mednafen
          curl -L -o Mednafen.Linux.zip https://github.com/willll/mednafenSSDev/releases/download/initial/Mednafen.Linux.zip
          unzip -o Mednafen.Linux.zip
          echo "$GITHUB_WORKSPACE/emulators/mednafen/" >> $GITHUB_PATH
      - name: Create Mednafen profile
        run: |
          mkdir -p $MEDNAFEN_HOME/firmware
      - name: Install BIOS
        run: |
          gdown 1miIZbAytFFRGlmL8H2gM8Hs__A3AC23P -O "$MEDNAFEN_HOME/firmware/mpr-17933.bin"
          gdown 1YvFP-7DCGq4AVd2Xo-HAaUQmikV6ufVT -O "$MEDNAFEN_HOME/firmware/sega_101.bin"
      - name: Run tests
        run: |
          cd $GITHUB_WORKSPACE/Tests
          bash $GITHUB_WORKSPACE/Tests/run_tests.bat mednafen
      - name: Convert test results
        run: |
          python3 $GITHUB_WORKSPACE/tools/scripts/ctrf_converter.py \
            $GITHUB_WORKSPACE/Tests/uts.log \
            $GITHUB_WORKSPACE/Tests/uts.json
      - name: Report Test Results
        uses: ctrf-io/github-test-reporter@v1
        with:
          report-path: './Tests/uts.json'
          summary-report: true
          failed-folded-report: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()
      - name: Archive UT results
        uses: actions/upload-artifact@v4
        with:
          name: uts.log
          path: Tests/uts.log
      - name: Archive report 
        uses: actions/upload-artifact@v4
        with:
          name: uts.json
          path: Tests/uts.json
